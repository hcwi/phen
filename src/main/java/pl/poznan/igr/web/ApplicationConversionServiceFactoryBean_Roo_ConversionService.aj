// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package pl.poznan.igr.web;

import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;
import pl.poznan.igr.domain.Context;
import pl.poznan.igr.web.ApplicationConversionServiceFactoryBean;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Context, String> ApplicationConversionServiceFactoryBean.getContextToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<pl.poznan.igr.domain.Context, java.lang.String>() {
            public String convert(Context context) {
                return new StringBuilder().append(context.getOwner()).append(' ').append(context.getStarted()).append(' ').append(context.getFinished()).append(' ').append(context.getStatusMessage()).toString();
            }
        };
    }
    
    public Converter<Long, Context> ApplicationConversionServiceFactoryBean.getIdToContextConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, pl.poznan.igr.domain.Context>() {
            public pl.poznan.igr.domain.Context convert(java.lang.Long id) {
                return Context.findContext(id);
            }
        };
    }
    
    public Converter<String, Context> ApplicationConversionServiceFactoryBean.getStringToContextConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, pl.poznan.igr.domain.Context>() {
            public pl.poznan.igr.domain.Context convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Context.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getContextToStringConverter());
        registry.addConverter(getIdToContextConverter());
        registry.addConverter(getStringToContextConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
